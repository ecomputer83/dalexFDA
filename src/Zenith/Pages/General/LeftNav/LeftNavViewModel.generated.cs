// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using PropertyChanged;
using Xamarin.Forms;

namespace Zenith
{
    [AddINotifyPropertyChangedInterface]
    public partial class LeftNavViewModel
    {
        //default services
        internal readonly Zenith.Abstractions.IErrorManager ErrorManager;

        //other services
        internal readonly Zenith.Abstractions.IAppService AppService;
        internal readonly Acr.UserDialogs.IUserDialogs Dialog;

        //commands
        public Command Overview { get; private set; }
        public Command Transfer { get; private set; }
        public Command AirtimeRecharge { get; private set; }
        public Command BillsPaymentAndCollections { get; private set; }
        public Command RecurringPayment { get; private set; }
        public Command CardsAndCheques { get; private set; }
        public Command TravelAndLeisure { get; private set; }
        public Command Messages { get; private set; }
        public Command Settings { get; private set; }
        public Command ZenithNearMe { get; private set; }
        public Command Logout { get; private set; }

        //properties

        public LeftNavViewModel
        (
           Zenith.Abstractions.IErrorManager ErrorManager
          ,Zenith.Abstractions.IAppService AppService
          ,Acr.UserDialogs.IUserDialogs Dialog
        )
        {
            //setup default services
            this.ErrorManager = ErrorManager;

            //setup other services
            this.AppService = AppService;
            this.Dialog = Dialog;

            //setup commands
            Overview = new Command(async () => await ExecuteOverview());
            Transfer = new Command(async () => await ExecuteTransfer());
            AirtimeRecharge = new Command(async () => await ExecuteAirtimeRecharge());
            BillsPaymentAndCollections = new Command(async () => await ExecuteBillsPaymentAndCollections());
            RecurringPayment = new Command(async () => await ExecuteRecurringPayment());
            CardsAndCheques = new Command(async () => await ExecuteCardsAndCheques());
            TravelAndLeisure = new Command(async () => await ExecuteTravelAndLeisure());
            Messages = new Command(async () => await ExecuteMessages());
            Settings = new Command(async () => await ExecuteSettings());
            ZenithNearMe = new Command(async () => await ExecuteZenithNearMe());
            Logout = new Command(async () => await ExecuteLogout());
  
            Setup();
        }

            
        private async Task ExecuteAirtimeRecharge()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("AirtimeRecharge","AirtimeRecharge","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
            
        private async Task ExecuteBillsPaymentAndCollections()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("BillsPaymentAndCollections","BillsPaymentAndCollections","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
            
        private async Task ExecuteRecurringPayment()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("RecurringPayment","RecurringPayment","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
            
        private async Task ExecuteCardsAndCheques()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("CardsAndCheques","CardsAndCheques","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
            
        private async Task ExecuteTravelAndLeisure()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("TravelAndLeisure","TravelAndLeisure","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
            
        private async Task ExecuteMessages()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("Messages","Messages","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
            
        private async Task ExecuteSettings()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("Settings","Settings","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
            
        private async Task ExecuteZenithNearMe()
        {
            try
            {
                await this.CoreMethods.DisplayAlert("ZenithNearMe","ZenithNearMe","OK");
            }
            catch(Exception ex)
            {
                await ErrorManager.DisplayErrorMessageAsync(ex);
            }
        }
 

    }
}
